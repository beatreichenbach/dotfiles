(defvar music_reveal false)

(defpoll song :interval "2s"  "~/.config/eww/scripts/music_info --song")
(defpoll song_artist :interval "2s"  "~/.config/eww/scripts/music_info --artist")
(defpoll current_status :interval "1s"  "~/.config/eww/scripts/music_info --time")
(defpoll song_status :interval "2s"  "~/.config/eww/scripts/music_info --status")
(defpoll cover_art :interval "2s"  "~/.config/eww/scripts/music_info --cover")

(defwidget music_controls []
    (box
        :orientation "h"
        (button :class "song_btn_prev" :onclick "~/.config/eww/scripts/music_info --prev" "")
        (button :class "song_btn_play" :onclick "~/.config/eww/scripts/music_info --toggle" song_status)
        (button :class "song_btn_next" :onclick "~/.config/eww/scripts/music_info --next" "")
    )
)

(defwidget music []
    (eventbox
        :onhover "${eww} update music_reveal=true"
		:onhoverlost "${eww} update music_reveal=false"
		(box
		    :class "module-2"
		    :orientation "h"
		    :space-evenly "false"
			(box
			    :class "song_cover_art"
			    :style "background-image: url('${cover_art}');"
			)
			(button
			    :class "song"
			    :wrap "true"
			    :onclick "~/.config/eww/scripts/pop music" song
			)
            (revealer
                :transition "slideright"
                :reveal music_reveal
                :duration duration
                (music_controls)
            )
        )
    )
)

(defwidget music_pop []
    (box
        :class "music_pop"
        :orientation "h"
        :space-evenly "false"
		(box
		    :class "music_cover_art"
		    :style "background-image: url('${cover_art}');"
	    )
        (box
            :orientation "v"
            :spacing 20
            :space-evenly "false"
            (label :halign "center" :class "music" :wrap "true" :limit-width 13 :text song)
            (label :halign "center" :class "music_artist" :wrap "true" :limit-width 15 :text song_artist)
            (box
                :orientation "h"
                :spacing 15
                :halign "center"
                :space-evenly "false"
                (music_controls)
            )
            (box
                :class "music_bar"
                :halign "center"
                :space-evenly "false"
                (scale :onscroll "mpc -q seek {}" :min 0 :active "true" :max 100 :value current_status)
            )
        )
    )
)

(defwindow music_win
    :monitor 1
    :stacking "fg"
    :focusable "false"
    :geometry (geometry :x "0" :y "20px" :width "400px" :height "100px" :anchor "top center")
    (music_pop)
)